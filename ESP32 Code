#include <WiFi.h>
#include <ESPAsyncWebServer.h>
const char* ssid = "OnePlus";
const char* password = "password";
AsyncWebServer server(80);
//  GPIO pins for LEDs
const int thumbLedPin = 27;
const int indexLedPin = 26;
const int middleLedPin = 25;
const int ringLedPin = 33;
const int pinkyLedPin = 32;
void turnOffAllLEDs() {
  digitalWrite(thumbLedPin, LOW);
  digitalWrite(indexLedPin, LOW);
  digitalWrite(middleLedPin, LOW);
  digitalWrite(ringLedPin, LOW);
  digitalWrite(pinkyLedPin, LOW);
}
void setup() {
  Serial.begin(115200);
  pinMode(thumbLedPin, OUTPUT);
  pinMode(indexLedPin, OUTPUT);
  pinMode(middleLedPin, OUTPUT);
  pinMode(ringLedPin, OUTPUT);
  pinMode(pinkyLedPin, OUTPUT);
  turnOffAllLEDs();
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(1000);
    Serial.print(".");
    attempts++;
  }
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\nConnected to WiFi");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
// Individual LED control routes (unchanged)
    server.on("/led/thumb/on", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(thumbLedPin, HIGH);
      request->send(200, "text/plain", "Thumb LED is ON");
    });
    server.on("/led/thumb/off", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(thumbLedPin, LOW);
      request->send(200, "text/plain", "Thumb LED is OFF");
    });
    server.on("/led/index/on", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(indexLedPin, HIGH);
      request->send(200, "text/plain", "Index LED is ON");
    });
    server.on("/led/index/off", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(indexLedPin, LOW);
      request->send(200, "text/plain", "Index LED is OFF");
    });
    server.on("/led/middle/on", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(middleLedPin, HIGH);
      request->send(200, "text/plain", "Middle LED is ON");
    });
    server.on("/led/middle/off", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(middleLedPin, LOW);
      request->send(200, "text/plain", "Middle LED is OFF");
    });
    server.on("/led/ring/on", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(ringLedPin, HIGH);
      request->send(200, "text/plain", "Ring LED is ON");
    });
    server.on("/led/ring/off", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(ringLedPin, LOW);
      request->send(200, "text/plain", "Ring LED is OFF"); });
    server.on("/led/pinky/on", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(pinkyLedPin, HIGH);
      request->send(200, "text/plain", "Pinky LED is ON");
    });
    server.on("/led/pinky/off", HTTP_GET, [](AsyncWebServerRequest *request){
      digitalWrite(pinkyLedPin, LOW);
      request->send(200, "text/plain", "Pinky LED is OFF");
    });
    server.on("/led/all/off", HTTP_GET, [](AsyncWebServerRequest *request){
      turnOffAllLEDs();
      request->send(200, "text/plain", "All LEDs are OFF");
    });
    server.begin();
    Serial.println("Server started");
  } else {
    Serial.println("\nFailed to connect to WiFi");
  }
}
void loop() {
  // No code needed here
}
